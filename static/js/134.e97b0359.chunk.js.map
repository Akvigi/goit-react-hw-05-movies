{"version":3,"file":"static/js/134.e97b0359.chunk.js","mappings":"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","sources":["API.js","components/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5924ceef083cd26964791f4e18444300'\n\nexport async function getMovies(query) {\n    const movies = axios({\n        method: \"get\",\n        url: `search/movie?api_key=${API_KEY}&query=${query}`,\n    })\n    return movies\n}\n\nexport async function getTrending() {\n    const movies = axios.get(`movie/popular?api_key=${API_KEY}`)\n    return movies\n}\n\nexport async function getMovieByID(id) {\n    const movie = axios.get(`movie/${id}?api_key=${API_KEY}`)\n    return movie\n}\n\nexport async function getMovieCast(id) {\n    const data = axios.get(`movie/${id}/credits?api_key=${API_KEY}`)\n    return data\n}\n\nexport async function getMovieReviews(id) {\n    const data = axios.get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    return data\n}","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nconst MovieList = ({ title, list = [], from }) => {\n  return (\n    <Container>\n        <h1>{title}</h1>\n        <List>\n          {list.length !== 0 && list.map(({ title, id, poster_path }) => (<li key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: from }}>\n              <img width={250} src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\n              <p>{title}</p>\n            </StyledLink>\n          </li>))}\n        </List>\n    </Container>\n  )\n}\n\n// MovieList.propTypes = {}\n\nexport default MovieList\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n`\n\nconst Container = styled.div`\n  padding: 0 5%;\n`","import { getMovies } from 'API'\nimport MovieList from 'components/MovieList'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport {useLocation, useSearchParams} from 'react-router-dom'\nimport styled from 'styled-components'\n// import PropTypes from 'prop-types'\n\nconst Movies = () => {\n  const [list, setList] = useState([])\n  const [search, setSearch] = useState(``)\n  const [searchParams, setSearchParams] = useSearchParams()\n  const query = searchParams.get('search') ?? ''\n  const location = useLocation()\n\n  useEffect(() => {\n    const getMoviesIfSearch = async () => {\n      if (query) {\n        try {\n          const { data } = await getMovies(query)\n          setList(data.results)\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    }\n    getMoviesIfSearch()\n  }, [query])\n  \n  const searchMovies = async (e) => {\n    e.preventDefault()\n    setSearchParams({search: `${search}`})\n  }\n\n  return (\n    <>\n      <Form action=\"submit\" onSubmit={(e) => searchMovies(e)}>\n        <Input\n         value={search} type=\"text\" onChange={(e) => setSearch(e.target.value.trim())} />\n        <Btn type=\"submit\">search</Btn>\n      </Form>\n      {list.length !== 0 && <MovieList title={\"Founded\"} list={list} from={location} />}\n    </>\n  )\n}\n\n// Movies.propTypes = {}\n\nexport default Movies\n\nconst Form = styled.form`\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\nconst Input = styled.input`\n  width: 40%;\n`\n\nconst Btn = styled.button`\n  padding: 5px;\n  margin-top: 10px;\n`"],"names":["axios","API_KEY","getMovies","query","movies","method","url","getTrending","getMovieByID","id","movie","getMovieCast","data","getMovieReviews","title","list","from","Container","List","length","map","poster_path","StyledLink","to","state","width","src","alt","styled","Link","useState","setList","search","setSearch","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","getMoviesIfSearch","results","console","log","searchMovies","e","preventDefault","Form","action","onSubmit","Input","value","type","onChange","target","trim","Btn"],"sourceRoot":""}