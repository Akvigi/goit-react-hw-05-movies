{"version":3,"file":"static/js/493.3b61b750.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,8EACGC,EAASJ,GAAAA,CAAM,CACjBK,OAAQ,MACRC,IAAI,wBAAD,OAA0BL,EAA1B,kBAA2CE,KAH/C,kBAKIC,GALJ,kEAQA,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,2FACGH,EAASJ,IAAAA,IAAA,gCAAmCC,IAD/C,kBAEIG,GAFJ,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,8EACGC,EAAQV,IAAAA,IAAA,gBAAmBS,EAAnB,oBAAiCR,IAD5C,kBAEIS,GAFJ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,8EACGG,EAAOZ,IAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,IADnD,kBAEIW,GAFJ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,8EACGG,EAAOZ,IAAAA,IAAA,gBAAmBS,EAAnB,4BAAyCR,IADnD,kBAEIW,GAFJ,oE,qICaP,UAlCa,WACX,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAgBP,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gHAEOT,EAAAA,EAAAA,IAAaM,GAFpB,gBAEPL,EAFO,EAEPA,KACPI,EAAYJ,EAAKS,MACjBC,QAAQC,IAAIX,EAAKS,KAAK,IAJR,gDAMdC,QAAQC,IAAR,MANc,yDAAH,qDASfH,MACC,CAACH,KAIF,SAACO,EAAD,UACuB,IAApBT,EAASU,QAAgBV,EAASW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcnB,EAAvB,EAAuBA,GAAIoB,EAA3B,EAA2BA,UAA3B,OACrC,UAACC,EAAD,YACE,SAACC,EAAD,CAAKC,MAAO,IAAKC,IAAG,yCAAoCL,GAAgBM,QAAU,OAAOC,IAAKR,KAC9F,4BACE,wBAAKA,KACL,+BAAOE,UAJApB,SAenB,IAAMe,EAAOY,EAAAA,GAAAA,GAAH,iKASJN,EAAOM,EAAAA,GAAAA,GAAH,yFAMJL,EAAMK,EAAAA,GAAAA,IAAH","sources":["API.js","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5924ceef083cd26964791f4e18444300'\n\nexport async function getMovies(query) {\n    const movies = axios({\n        method: \"get\",\n        url: `search/movie?api_key=${API_KEY}&query=${query}`,\n    })\n    return movies\n}\n\nexport async function getTrending() {\n    const movies = axios.get(`movie/popular?api_key=${API_KEY}`)\n    return movies\n}\n\nexport async function getMovieByID(id) {\n    const movie = axios.get(`movie/${id}?api_key=${API_KEY}`)\n    return movie\n}\n\nexport async function getMovieCast(id) {\n    const data = axios.get(`movie/${id}/credits?api_key=${API_KEY}`)\n    return data\n}\n\nexport async function getMovieReviews(id) {\n    const data = axios.get(`movie/${id}/reviews?api_key=${API_KEY}`)\n    return data\n}","import { getMovieCast } from 'API'\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\n// import PropTypes from 'prop-types'\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([])\n  const {movieId} = useParams()\n  \n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const {data} = await getMovieCast(movieId)\n        setCastList(data.cast)\n        console.log(data.cast[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCast()\n  }, [movieId])\n  \n\n  return (\n    <List>\n      {castList.length !== 0 && castList.map(({ name, profile_path, id, character }) => (\n        <Item key={id}>\n          <Img width={100} src={`https://image.tmdb.org/t/p/w500${profile_path}`} loading = \"lazy\" alt={name} />\n          <div>\n            <h4>{name}</h4>\n            <p>as {character}</p>\n          </div>\n        </Item>))}\n    </List>\n  )\n}\n\n// Cast.propTypes = {}\n\nexport default Cast\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 2% 5%;\n`\n\nconst Item = styled.li`\n  margin-right: 30px;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Img = styled.img`\n  margin-right: 10px;\n  padding-bottom: 10px;\n`"],"names":["axios","API_KEY","getMovies","query","movies","method","url","getTrending","getMovieByID","id","movie","getMovieCast","data","getMovieReviews","useState","castList","setCastList","movieId","useParams","useEffect","fetchCast","cast","console","log","List","length","map","name","profile_path","character","Item","Img","width","src","loading","alt","styled"],"sourceRoot":""}